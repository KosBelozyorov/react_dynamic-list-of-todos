{"version":3,"sources":["constants/proptypes.js","components/Button/Button.js","components/TodoItemSort/TodoItemSort.js","components/User/User.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["userShape","PropTypes","string","isRequired","shape","name","Button","func","title","completed","bool","id","number","user","arrayOf","_ref","text","listOfTodos","onClick","react_default","a","createElement","className","type","TodoItemSort","buttons","label","_this$props","this","props","sort","onSortChange","map","isActive","sortBtnClasses","classNames","btn-info","btn-outline-secondary","concat","key","Component","User","TodoItem","todo","_todo$completed","classes","todo-list-item","todo-list-item todo-list-item--done","components_User_User","TodoList","todos","components_TodoItem_TodoItem","TODOS_URL","USERS_URL","App","state","users","isLoading","getTodosWithUsers","todosList","usersList","_objectSpread","find","userId","loadData","_this","setState","Promise","all","fetch","then","_ref2","Object","slicedToArray","resTodos","resUsers","json","_ref3","_ref4","dataTodos","dataUsers","sortPanel","posts","b","localeCompare","_this$state","preparedTodos","visibleItems","length","Fragment","disabled","role","aria-hidden","components_Button_Button","components_TodoItemSort_TodoItemSort","components_TodoList_TodoList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e3fafe07.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const ButtonProps = {\n  text: PropTypes.string.isRequired,\n};\n\nconst userShape = PropTypes.shape({\n  name: PropTypes.string,\n}).isRequired;\n\nexport const UserProps = {\n  user: userShape,\n};\n\nexport const TodoItemSortProps = {\n  onSortChange: PropTypes.func.isRequired,\n  sort: PropTypes.string.isRequired,\n};\n\nexport const TodoItemProps = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.number,\n    user: userShape,\n  }).isRequired,\n};\n\nexport const TodoListProps = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n      id: PropTypes.number,\n      user: userShape,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport { ButtonProps } from '../../constants/proptypes';\n\nimport './Button.css';\n\nconst Button = ({ text, listOfTodos, onClick }) => (\n  <button\n    className=\"btn btn-primary btn--start\"\n    type=\"button\"\n    onClick={() => onClick(listOfTodos)}\n  >\n    {text}\n  </button>\n);\n\nButton.propTypes = ButtonProps;\n\nexport default Button;\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { TodoItemSortProps } from '../../constants/proptypes';\n\nimport './TodoItemSort.css';\n\nclass TodoItemSort extends Component {\n  buttons = [\n    { name: 'default', label: 'Default' },\n    { name: 'title', label: 'Title' },\n    { name: 'status', label: 'Status' },\n    { name: 'user', label: 'User' },\n  ];\n\n  render() {\n    const { sort, onSortChange } = this.props;\n\n    const buttons = this.buttons.map(({ name, label }) => {\n      const isActive = sort === name;\n\n      const sortBtnClasses = classNames({\n        'btn-info': isActive,\n        'btn-outline-secondary': !isActive,\n      });\n\n      return (\n        <button\n          type=\"button\"\n          className={`btn ${sortBtnClasses}`}\n          key={name}\n          onClick={() => onSortChange(name)}\n        >\n          {label}\n        </button>\n      );\n    });\n\n    return (\n      <div className=\"btn-group\">\n        {buttons}\n      </div>\n    );\n  }\n}\n\nTodoItemSort.propTypes = TodoItemSortProps;\n\nexport default TodoItemSort;\n","import React from 'react';\nimport { UserProps } from '../../constants/proptypes';\nimport './User.css';\n\nconst User = ({ user }) => (\n  <span className=\"todo-list-item__user\">{user.name}</span>\n);\n\nUser.propTypes = UserProps;\n\nexport default User;\n","import React from 'react';\nimport classNames from 'classnames';\nimport User from '../User/User';\nimport { TodoItemProps } from '../../constants/proptypes';\n\nimport './TodoItem.css';\n\nconst TodoItem = ({ todo }) => {\n  const {\n    title, completed = false, user, id,\n  } = todo;\n\n  const classes = classNames({\n    'todo-list-item': true,\n    'todo-list-item todo-list-item--done': completed,\n  });\n\n  return (\n    <span className={classes}>\n      <span className=\"todo-list-item__id\">{id}</span>\n      <User user={user} />\n      <span className=\"todo-list-item__name\">{title}</span>\n    </span>\n  );\n};\n\nTodoItem.propTypes = TodoItemProps;\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from '../TodoItem/TodoItem';\nimport { TodoListProps } from '../../constants/proptypes';\n\nimport './TodoList.css';\n\nconst TodoList = ({ todos }) => (\n  <ul className=\"list-group todo-list\">\n    {todos.map(todo => (\n      <li className=\"list-group-item\" key={todo.id}>\n        <TodoItem todo={todo} />\n      </li>\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = TodoListProps;\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport Button from './components/Button/Button';\nimport TodoItemSort from './components/TodoItemSort/TodoItemSort';\nimport TodoList from './components/TodoList/TodoList';\n\nimport './App.css';\n\nconst TODOS_URL = 'https://jsonplaceholder.typicode.com/todos';\nconst USERS_URL = 'https://jsonplaceholder.typicode.com/users';\n\nclass App extends Component {\n  state = {\n    todos: [],\n    users: [],\n    sort: 'default',\n    isLoading: false,\n  };\n\n  getTodosWithUsers = (todosList, usersList) => todosList.map(todo => ({\n    ...todo,\n    user: usersList.find(user => user.id === todo.userId),\n  }))\n\n  loadData = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    Promise.all([\n      fetch(TODOS_URL),\n      fetch(USERS_URL),\n    ])\n      .then(([resTodos, resUsers]) => Promise.all(\n        [resTodos.json(), resUsers.json()]\n      ))\n      .then(([dataTodos, dataUsers]) => this.setState({\n        todos: dataTodos,\n        users: dataUsers,\n        isLoading: false,\n      }));\n  };\n\n  sortPanel = (posts, sort) => {\n    switch (sort) {\n      case 'title':\n        return posts.sort((a, b) => (a.title.localeCompare(b.title)));\n      case 'status':\n        return posts.sort((a, b) => a.completed - b.completed);\n      case 'user':\n        return posts.sort((a, b) => a.user.name.localeCompare(b.user.name));\n      default:\n        return posts;\n    }\n  };\n\n  onSortChange = (sort) => {\n    this.setState({ sort });\n  };\n\n  render() {\n    const {\n      todos,\n      users,\n      sort,\n      isLoading,\n    } = this.state;\n\n    const preparedTodos = this.getTodosWithUsers(todos, users);\n    const visibleItems = this.sortPanel(preparedTodos, sort);\n\n    return (\n      <div className=\"App\">\n        <h1>Dynamic list of todos</h1>\n        <div className=\"container\">\n\n          <div className=\"content\">\n            {todos.length === 0\n              ? (\n                <>\n                  {isLoading\n                    ? (\n                      <button\n                        className=\"btn btn-primary\"\n                        type=\"button\"\n                        disabled\n                      >\n                        <span\n                          className=\"spinner-border spinner-border-sm\"\n                          role=\"status\"\n                          aria-hidden=\"true\"\n                        />\n                        <span className=\"sr-only\">Loading...</span>\n                      </button>\n                    )\n                    : ''\n                  }\n                  <div>\n                    <Button\n                      className=\"btn--start\"\n                      text=\"Load\"\n                      onClick={this.loadData}\n                    />\n                  </div>\n                </>\n              )\n              : (\n                <>\n                  <p>\n                    <span>Todos: </span>\n                    {todos.length}\n                  </p>\n\n                  <p>\n                    <span>Users: </span>\n                    {users.length}\n                  </p>\n                  <TodoItemSort\n                    sort={sort}\n                    onSortChange={this.onSortChange}\n                  />\n                  <TodoList todos={visibleItems} />\n                </>\n              )\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}